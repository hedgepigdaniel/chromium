// Copyright 2015 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module ui.mojom;

import "services/ui/public/interfaces/window_tree.mojom";
import "ui/gfx/geometry/mojo/geometry.mojom";

// WindowTreeHost encapsulates a unique underlying platform window, with a tree
// of windows.
interface WindowTreeHost {
  // Sets the size of the platform window.
  SetSize(gfx.mojom.Size size);

  // Sets a title string to be displayed on the platform window.
  SetTitle(string title);
};

// WindowTreeHostFactoryRegistrar is the entry point to obtain a
// WindowTreeHostFactory instance in 'external window mode'.
// Callers also obtain a mojo handle to the unique ws::WindowTree instance,
// on the server-side.
//
// NOTE: WindowTreeHostFactoryRegistrar::Register and
// WindowTreeHostFactory::CreatePlatformWindow are put on separate interfaces,
// so that the interface containing ::CreatePlatformWindow is obtained by
// calling ::Register. That eliminates the possibility of ::CreatePlatformWindow
// being called before ::Register.
interface WindowTreeHostFactoryRegistrar {
   Register(WindowTreeHostFactory& window_tree_host_factory,
            WindowTree& tree_request,
            WindowTreeClient client);
};

// WindowTreeHostFactory triggers the creation of WindowTreeHost instances.
interface WindowTreeHostFactory {
  // Creates a new WindowTreeHost in 'external window mode'.
  // One WindowTree/WindowTreeClient pair can serve one or more WindowTreeHost
  // instances.
  CreatePlatformWindow(WindowTreeHost& window_tree_host, uint32 client_id);
};
